{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/MessagesItem/MessagesItem.module.css","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/MessagesItem/MessagesItem.jsx","components/Dialogs/Dialogs.jsx","App.js","serviceWorker.js","Redux/state.js","index.js"],"names":["module","exports","Header","className","s","header","img","src","Navbar","nav","navItem","to","href","Post","props","post","text","MyPosts","postsElements","posts","map","item","ProfileInfo","imgContainer","url","description","Profile","DialogsItem","path","id","name","MessagesItem","message","Dialogs","dialogsElements","dialogs","dialog","messages","DialogsItems","Messages","App","render","Boolean","window","location","hostname","match","state","likesCount","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.933fbad6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"navItem\":\"Navbar_navItem__16nSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__34LEF\",\"imgContainer\":\"ProfileInfo_imgContainer__1Au_4\",\"img\":\"ProfileInfo_img__1lpBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1HvdP\",\"DialogsItems\":\"Dialogs_DialogsItems__LIXpe\",\"Messages\":\"Dialogs_Messages__2OSA1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"img\":\"Header_img__3ifQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogsItem\":\"DialogsItem_DialogsItem__16bfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessagesItem\":\"MessagesItem_MessagesItem__34gIN\"};","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img className={s.img} src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.navItem}>\r\n                <NavLink to=\"/Profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <NavLink to=\"/Dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">News</a>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">Music</a>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n        {props.text}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\n\r\nexport const MyPosts = (props) => {\r\n  let postsElements = props.posts.map((item) => <Post text={item.text} />);\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      My posts\r\n      <label>\r\n        New Post\r\n        <br /><textarea />\r\n      </label>\r\n      {postsElements}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nexport const ProfileInfo = (props) => {\r\n  return (\r\n    <div className={s.ProfileInfo}>\r\n      <div className={s.imgContainer}>\r\n        <img className={s.img} src={props.url} />\r\n      </div>\r\n      <div className={s.description}>\r\n        {props.description}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport {MyPosts} from \"./MyPosts/MyPosts\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={s.Profile}>\r\n      <ProfileInfo description=\"some text\" url=\"https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg\" />\r\n        <div>\r\n          <MyPosts posts={props.posts}/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport s from \"./DialogsItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const DialogsItem = (props) => {\r\n    const path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.DialogsItem}>\r\n            <NavLink to={path}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport s from \"./MessagesItem.module.css\";\r\n\r\nexport const MessagesItem = (props) => {\r\n    return (\r\n        <div className={s.MessagesItem}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {MessagesItem} from \"./MessagesItem/MessagesItem\";\r\n\r\nconst Dialogs = (props) => {\r\n    const dialogsElements = props.dialogs.map((dialog) => <DialogsItem name={dialog.name} id={dialog.id} />);\r\n    const messagesElements = props.messages.map((message) => <MessagesItem id={message.id} message={message.id}/>);\r\n\r\n    return (\r\n        <div className={s.Dialogs}>\r\n            <div className={s.DialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.Messages}>\r\n                <MessagesItem message=\"LoL\" />\r\n                <MessagesItem message=\"What are you doing\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport {BrowserRouter, Route} from \"react-router-dom\"\n\nconst App = (props) => {\n  return (\n    <BrowserRouter>\n      <div className='app-wrapper'>\n        <Header />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route render={ () => <Profile posts={props.posts} /> } path=\"/Profile\" />\n          <Route render={ () => <Dialogs dialogs={props.dialogs} messages={props.messages}/> } path=\"/Dialogs\"/>\n        </div>\n      </div>\n    </BrowserRouter>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const state = {\n    posts: [\n        {id: 1, text: 'Hi, how are you?', likesCount: 12},\n        {id: 2, text: 'It\\'s my first post', likesCount: 11},\n        {id: 3, text: 'Blabla', likesCount: 11},\n        {id: 4, text: 'Dada', likesCount: 11}\n      ],\n    \n      dialogs: [\n        {id: 1, name: 'Dimych'},\n        {id: 2, name: 'Andrew'},\n        {id: 3, name: 'Sveta'},\n        {id: 4, name: 'Sasha'},\n        {id: 5, name: 'Viktor'},\n        {id: 6, name: 'Valera'}\n    ],\n    \n    messages: [\n        {id: 1, message: 'Hi'},\n        {id: 2, message: 'How is your it-kamasutra?'},\n        {id: 3, message: 'Yo'},\n        {id: 4, message: 'Yo'},\n        {id: 5, message: 'Yo'}\n    ],\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {state} from \"./Redux/state\";\n\n\nReactDOM.render(<App posts={state.posts} dialogs={state.dialogs} messages={state.messages}/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}